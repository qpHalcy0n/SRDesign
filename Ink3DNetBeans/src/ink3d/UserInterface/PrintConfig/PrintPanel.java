/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ink3d.UserInterface.PrintConfig;

import ink3d.ConfigurationObjects.CoolingConfiguration;
import ink3d.UserInterface.Extruder.*;
import ink3d.ConfigurationObjects.ExtruderConfiguration;
import ink3d.ConfigurationObjects.ExtrusionWidthConfiguration;
import ink3d.ConfigurationObjects.InfillConfiguration;
import ink3d.ConfigurationObjects.LayerAndPerimeterConfiguration;
import ink3d.ConfigurationObjects.PrintConfiguration;
import ink3d.ConfigurationObjects.SkirtAndBrimConfiguration;
import ink3d.ConfigurationObjects.SpeedConfiguration;
import ink3d.ConfigurationObjects.SupportMaterialConfiguration;
import ink3d.UserInterface.MainMenu.BadFieldException;
import ink3d.UserInterface.MainMenu.MainWindow;
import ink3d.UserInterface.PrinterConfig.PrinterController;
import ink3d.Util.InputValidationUtility;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Tim
 */
public class PrintPanel extends javax.swing.JPanel {
    private PrintController controller;
    private DefaultListModel listModel;
    /**
     * Creates new form ExtruderGUI
     */
    public PrintPanel() {
        this.controller = new PrintController();
        initComponents();
        loadPrintConfigurationList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        commandPanel = new javax.swing.JPanel();
        newBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        loadBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        namePanel = new javax.swing.JPanel();
        nameLbl = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        selectionPanel = new javax.swing.JPanel();
        selectionScrollPane = new javax.swing.JScrollPane();
        printConfigList = new javax.swing.JList();
        configPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        layerHeightPCText = new javax.swing.JTextField();
        firstLayerHeightPCText = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        spiralVasePCCheckBox = new javax.swing.JCheckBox();
        perimetersText = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        solidTopLayersText = new javax.swing.JTextField();
        solidBottomLayersText = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        generateExtraPerimetersCheckBox = new javax.swing.JCheckBox();
        avoidCrossingPerimetersCheckBox = new javax.swing.JCheckBox();
        detectThinWallsCheckBox = new javax.swing.JCheckBox();
        detectBridgesCheckBox = new javax.swing.JCheckBox();
        concavePointsCheckBox = new javax.swing.JCheckBox();
        nonOverhangsCheckBox = new javax.swing.JCheckBox();
        jPanel27 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        randomizeStartingPointsCheckBox = new javax.swing.JCheckBox();
        externalPerimetersFirstCheckBox = new javax.swing.JCheckBox();
        jPanel28 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        fillDensityPCText = new javax.swing.JTextField();
        fillPatternPCCombo = new javax.swing.JComboBox();
        topBottomPCCombo = new javax.swing.JComboBox();
        jPanel29 = new javax.swing.JPanel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        infillNeededPCCheckBox = new javax.swing.JCheckBox();
        jLabel76 = new javax.swing.JLabel();
        combineInfillEveryNLayersText = new javax.swing.JTextField();
        jPanel30 = new javax.swing.JPanel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        solidThresholdPCText = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        onlyRetractInfillWhenCrossingPerimetersCheckBox = new javax.swing.JCheckBox();
        infillBeforePerimetersCheckBox = new javax.swing.JCheckBox();
        solidInfillEveryNLayersText = new javax.swing.JTextField();
        fillAngleText = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        perimetersSpeedText = new javax.swing.JTextField();
        smallPerimetersSpeedText = new javax.swing.JTextField();
        externalPerimetersSpeedText = new javax.swing.JTextField();
        infillSpeedText = new javax.swing.JTextField();
        solidInfillSpeedText = new javax.swing.JTextField();
        topSolidInfillSpeedText = new javax.swing.JTextField();
        supportMaterialSpeedText = new javax.swing.JTextField();
        bridgesSpeedText = new javax.swing.JTextField();
        gapFillSpeedText = new javax.swing.JTextField();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        travelSpeedText = new javax.swing.JTextField();
        jLabel106 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        firstLayerSpeedText = new javax.swing.JTextField();
        jLabel109 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        perimetersAccelerationText = new javax.swing.JTextField();
        infillAccelerationText = new javax.swing.JTextField();
        bridgeSpeedAccerlerationText = new javax.swing.JTextField();
        firstLayerAccelerationText = new javax.swing.JTextField();
        defaultAccelerationText = new javax.swing.JTextField();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jLabel121 = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        skirtDistanceFromObjectText = new javax.swing.JTextField();
        skirtMinExtrusionLengthText = new javax.swing.JTextField();
        jLabel126 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        skirtLoopsText = new javax.swing.JTextField();
        skirtHeightText = new javax.swing.JTextField();
        jPanel36 = new javax.swing.JPanel();
        jLabel129 = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        brimWidthText = new javax.swing.JTextField();
        jLabel131 = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jLabel132 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        generateSupportMaterialCheckBox = new javax.swing.JCheckBox();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        jLabel136 = new javax.swing.JLabel();
        overhangThresholdText = new javax.swing.JTextField();
        enforceSupportForFirstNLayersText = new javax.swing.JTextField();
        jPanel38 = new javax.swing.JPanel();
        jLabel137 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        jLabel139 = new javax.swing.JLabel();
        raftLayersText = new javax.swing.JTextField();
        jPanel39 = new javax.swing.JPanel();
        jLabel140 = new javax.swing.JLabel();
        jLabel141 = new javax.swing.JLabel();
        jLabel142 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();
        jLabel144 = new javax.swing.JLabel();
        jLabel145 = new javax.swing.JLabel();
        supportMaterialPatternCombo = new javax.swing.JComboBox();
        supportMaterialPatternSpacingText = new javax.swing.JTextField();
        supportMaterialInterfacePatternSpacingText = new javax.swing.JTextField();
        jLabel146 = new javax.swing.JLabel();
        jLabel147 = new javax.swing.JLabel();
        jLabel148 = new javax.swing.JLabel();
        supportMaterialPatternAngleText = new javax.swing.JTextField();
        supportMaterialInterfaceLayersText = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jLabel154 = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        verboseGCodeCheckBox = new javax.swing.JCheckBox();
        jPanel48 = new javax.swing.JPanel();
        jLabel170 = new javax.swing.JLabel();
        jLabel171 = new javax.swing.JLabel();
        jLabel172 = new javax.swing.JLabel();
        jLabel173 = new javax.swing.JLabel();
        jLabel174 = new javax.swing.JLabel();
        jLabel175 = new javax.swing.JLabel();
        jLabel176 = new javax.swing.JLabel();
        jLabel177 = new javax.swing.JLabel();
        jLabel178 = new javax.swing.JLabel();
        jLabel179 = new javax.swing.JLabel();
        maxFanSpeedText = new javax.swing.JTextField();
        bridgeFanSpeedPercentText = new javax.swing.JTextField();
        disableFanForFirstNLayersText = new javax.swing.JTextField();
        minFanSpeedText = new javax.swing.JTextField();
        keepFanAlwaysOnCheckBox = new javax.swing.JCheckBox();
        enableAutoCoolingCheckBox = new javax.swing.JCheckBox();
        jPanel49 = new javax.swing.JPanel();
        jLabel180 = new javax.swing.JLabel();
        jLabel181 = new javax.swing.JLabel();
        jLabel182 = new javax.swing.JLabel();
        jLabel183 = new javax.swing.JLabel();
        jLabel184 = new javax.swing.JLabel();
        jLabel185 = new javax.swing.JLabel();
        jLabel186 = new javax.swing.JLabel();
        enableFanTimeThresholdText = new javax.swing.JTextField();
        slowDownTimeTresholdlText = new javax.swing.JTextField();
        minPrintSpeedText = new javax.swing.JTextField();
        jPanel40 = new javax.swing.JPanel();
        jLabel149 = new javax.swing.JLabel();
        jLabel150 = new javax.swing.JLabel();
        jLabel151 = new javax.swing.JLabel();
        jLabel152 = new javax.swing.JLabel();
        jLabel153 = new javax.swing.JLabel();
        jLabel156 = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        jLabel158 = new javax.swing.JLabel();
        defaultExtrusionWidthText = new javax.swing.JTextField();
        firstLayerExtrusionWidthPercentText = new javax.swing.JTextField();
        perimetersExtrusionWidthText = new javax.swing.JTextField();
        infillExtrusionWidthText = new javax.swing.JTextField();
        solidInfillExtrusionWidthText = new javax.swing.JTextField();
        topSolidInfillExtrusionWidthText = new javax.swing.JTextField();
        supportMaterialExtrusionWidthText = new javax.swing.JTextField();
        jLabel161 = new javax.swing.JLabel();
        jLabel162 = new javax.swing.JLabel();
        jLabel163 = new javax.swing.JLabel();
        jLabel164 = new javax.swing.JLabel();
        jLabel165 = new javax.swing.JLabel();
        jLabel166 = new javax.swing.JLabel();
        jLabel167 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new java.awt.BorderLayout());

        headerPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        headerPanel.setLayout(new javax.swing.BoxLayout(headerPanel, javax.swing.BoxLayout.PAGE_AXIS));

        commandPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        newBtn.setText("New");
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });
        commandPanel.add(newBtn);

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        commandPanel.add(saveBtn);

        loadBtn.setText("Load");
        loadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadBtnActionPerformed(evt);
            }
        });
        commandPanel.add(loadBtn);

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        commandPanel.add(deleteBtn);

        headerPanel.add(commandPanel);

        namePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        nameLbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nameLbl.setText("Name:");
        namePanel.add(nameLbl);

        nameTxt.setColumns(50);
        namePanel.add(nameTxt);

        headerPanel.add(namePanel);

        add(headerPanel, java.awt.BorderLayout.NORTH);

        selectionPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        selectionPanel.setPreferredSize(new java.awt.Dimension(200, 555));
        selectionPanel.setLayout(new java.awt.BorderLayout());

        selectionScrollPane.setMaximumSize(new java.awt.Dimension(32767, 33));
        selectionScrollPane.setPreferredSize(new java.awt.Dimension(200, 132));

        printConfigList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        selectionScrollPane.setViewportView(printConfigList);

        selectionPanel.add(selectionScrollPane, java.awt.BorderLayout.CENTER);

        add(selectionPanel, java.awt.BorderLayout.WEST);

        configPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        configPanel.setPreferredSize(new java.awt.Dimension(600, 600));
        configPanel.setLayout(new java.awt.BorderLayout());

        jScrollPane7.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane7.setPreferredSize(new java.awt.Dimension(404, 3000));

        jPanel22.setBackground(new java.awt.Color(153, 153, 153));
        jPanel22.setFocusTraversalPolicyProvider(true);
        jPanel22.setPreferredSize(new java.awt.Dimension(400, 3200));
        jPanel22.setLayout(new javax.swing.BoxLayout(jPanel22, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel29.setText("Layer height:");

        jLabel30.setText("First layer height:");

        layerHeightPCText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerHeightPCTextActionPerformed(evt);
            }
        });

        firstLayerHeightPCText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstLayerHeightPCTextActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setText("Layer Height");

        jLabel66.setText("mm");

        jLabel67.setText("mm");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(layerHeightPCText, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstLayerHeightPCText, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel66)
                            .addComponent(jLabel67)))
                    .addComponent(jLabel31))
                .addContainerGap(349, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel31)
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(layerHeightPCText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel66))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(firstLayerHeightPCText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel67))
                .addContainerGap())
        );

        jPanel22.add(jPanel23);

        jPanel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setText("Vertical Shells");

        jLabel33.setText("Perimeters: (minimum)");

        jLabel34.setText("Spiral vase:");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spiralVasePCCheckBox)
                            .addComponent(perimetersText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(362, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel32)
                .addGap(18, 18, 18)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(perimetersText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(spiralVasePCCheckBox))
                .addGap(9, 9, 9))
        );

        jPanel22.add(jPanel24);

        jPanel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel35.setText("Horizontal Shells");

        jLabel36.setText("Solid layers:");

        jLabel37.setText("Top:");

        jLabel38.setText("Bottom:");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addGap(62, 62, 62)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel38))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(solidTopLayersText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(solidBottomLayersText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(310, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37)
                    .addComponent(solidTopLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(solidBottomLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        jPanel22.add(jPanel25);

        jPanel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));
        jPanel26.setPreferredSize(new java.awt.Dimension(393, 200));

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel39.setText("Quality (slower slicing)");

        jLabel40.setText("Extra perimeters if needed:");

        jLabel41.setText("Avoid crossing perimeters:");

        jLabel42.setText("Start perimeters at:");

        jLabel43.setText("Detect thin walls:");

        jLabel44.setText("Detect bridging perimeters:");

        concavePointsCheckBox.setText("Concave points");

        nonOverhangsCheckBox.setText("Non-overhang points");
        nonOverhangsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonOverhangsCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel39)
                            .addComponent(jLabel40))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(generateExtraPerimetersCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(avoidCrossingPerimetersCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44))
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel26Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(detectBridgesCheckBox)
                                    .addComponent(detectThinWallsCheckBox)))
                            .addGroup(jPanel26Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(concavePointsCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nonOverhangsCheckBox)))))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel41)
                            .addComponent(avoidCrossingPerimetersCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(concavePointsCheckBox)
                            .addComponent(nonOverhangsCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43)
                            .addComponent(detectThinWallsCheckBox, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addComponent(detectBridgesCheckBox)))
                    .addComponent(generateExtraPerimetersCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel22.add(jPanel26);

        jPanel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel45.setText("Advanced");

        jLabel46.setText("Randomized starting points:");

        jLabel68.setText("External perimeters first:");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel68)
                    .addComponent(jLabel45)
                    .addComponent(jLabel46))
                .addGap(50, 50, 50)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(externalPerimetersFirstCheckBox)
                    .addComponent(randomizeStartingPointsCheckBox))
                .addContainerGap(341, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel27Layout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel68))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel27Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(randomizeStartingPointsCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(externalPerimetersFirstCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9))
        );

        jPanel22.add(jPanel27);

        jPanel28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel69.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel69.setText("Infill");

        jLabel70.setText("Fill density:");

        jLabel71.setText("Fill pattern:");

        jLabel72.setText("Top/bottom fill pattern:");

        fillPatternPCCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "rectilinear", "line", "concentric", "honeycomb", "hilbertcurve", "archimedeanchords", "octagramspiral" }));

        topBottomPCCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "rectilinear", "concentric", "hilbertcurve", "archimedeanchords", "octagramspiral" }));

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel69)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel70)
                            .addComponent(jLabel71)
                            .addComponent(jLabel72))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(topBottomPCCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fillDensityPCText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fillPatternPCCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(268, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel69)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel70)
                    .addComponent(fillDensityPCText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(fillPatternPCCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(topBottomPCCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        jPanel22.add(jPanel28);

        jPanel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel73.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel73.setText("Reducing Printing Time");

        jLabel74.setText("Combine infill every:");

        jLabel75.setText("Only infill where needed:");

        jLabel76.setText("layers");

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel73)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel74)
                            .addComponent(jLabel75))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addComponent(combineInfillEveryNLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel76))
                            .addComponent(infillNeededPCCheckBox))))
                .addContainerGap(324, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel73)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addComponent(jLabel74)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel75)
                            .addComponent(infillNeededPCCheckBox)))
                    .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(combineInfillEveryNLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );

        jPanel22.add(jPanel29);

        jPanel30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel77.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel77.setText("Advanced Infill");

        jLabel78.setText("Solid infill every:");

        jLabel79.setText("Fill angle:");

        jLabel80.setText("Solid infill threshold area:");

        jLabel81.setText("layers");

        jLabel82.setText("mm^2");

        jLabel83.setText("Only retract when crossing perimeters:");

        jLabel84.setText("Infill before perimeters:");

        solidInfillEveryNLayersText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solidInfillEveryNLayersTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel77)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel30Layout.createSequentialGroup()
                                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel80)
                                    .addComponent(jLabel78))
                                .addGap(37, 37, 37))
                            .addGroup(jPanel30Layout.createSequentialGroup()
                                .addComponent(jLabel79)
                                .addGap(112, 112, 112)))
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(solidThresholdPCText, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addComponent(solidInfillEveryNLayersText)
                            .addComponent(fillAngleText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel81)
                            .addComponent(jLabel82)))
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel83)
                            .addComponent(jLabel84))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(onlyRetractInfillWhenCrossingPerimetersCheckBox)
                            .addComponent(infillBeforePerimetersCheckBox))))
                .addContainerGap(292, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel77)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78)
                    .addComponent(jLabel81)
                    .addComponent(solidInfillEveryNLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79)
                    .addComponent(fillAngleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80)
                    .addComponent(solidThresholdPCText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel82))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addComponent(jLabel83)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel84))
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addComponent(onlyRetractInfillWhenCrossingPerimetersCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infillBeforePerimetersCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9))
        );

        jPanel22.add(jPanel30);

        jPanel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel85.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel85.setText("Speed for Print Moves");

        jLabel86.setText("Perimeters:");

        jLabel87.setText("Small perimeters:");

        jLabel88.setText("External perimeters:");

        jLabel89.setText("Infill:");

        jLabel90.setText("Solid infill:");

        jLabel91.setText("Top solid infill:");

        jLabel92.setText("Support material:");

        jLabel93.setText("Bridges:");

        jLabel94.setText("Gap fill:");

        perimetersSpeedText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perimetersSpeedTextActionPerformed(evt);
            }
        });

        jLabel95.setText("mm/s");

        jLabel96.setText("mm/s");

        jLabel97.setText("mm/s");

        jLabel98.setText("mm/s");

        jLabel99.setText("mm/s");

        jLabel100.setText("mm/s");

        jLabel101.setText("mm/s");

        jLabel102.setText("mm/s");

        jLabel103.setText("mm/s");

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel85)
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel86)
                            .addComponent(jLabel87)
                            .addComponent(jLabel88)
                            .addComponent(jLabel89)
                            .addComponent(jLabel90)
                            .addComponent(jLabel91)
                            .addComponent(jLabel92)
                            .addComponent(jLabel93)
                            .addComponent(jLabel94))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(gapFillSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel103))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(bridgesSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel102))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(supportMaterialSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel101))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(topSolidInfillSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel100))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(solidInfillSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel99))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(infillSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel98))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(externalPerimetersSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel97))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(smallPerimetersSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel96))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(perimetersSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel95)))))
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel85)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel86)
                    .addComponent(perimetersSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel95))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel87)
                    .addComponent(smallPerimetersSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel96))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel88)
                    .addComponent(externalPerimetersSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel97))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel89)
                    .addComponent(infillSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel98))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel90)
                    .addComponent(solidInfillSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel99))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel91)
                    .addComponent(topSolidInfillSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel100))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel92)
                    .addComponent(supportMaterialSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel101))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel93)
                    .addComponent(bridgesSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel102))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel94)
                    .addComponent(gapFillSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel103))
                .addGap(13, 13, 13))
        );

        jPanel22.add(jPanel31);

        jPanel32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel104.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel104.setText("Speed for Non-Print Moves");

        jLabel105.setText("Travel:");

        jLabel106.setText("mm/s");

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel104)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(jLabel105)
                        .addGap(109, 109, 109)
                        .addComponent(travelSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel106)))
                .addContainerGap(311, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel104)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel105)
                    .addComponent(travelSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel106))
                .addGap(13, 13, 13))
        );

        jPanel22.add(jPanel32);

        jPanel33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel107.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel107.setText("Speed Modifiers");

        jLabel108.setText("First layer speed:");

        jLabel109.setText("%");

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel107)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addComponent(jLabel108)
                        .addGap(58, 58, 58)
                        .addComponent(firstLayerSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel109)))
                .addContainerGap(326, Short.MAX_VALUE))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel107)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel108)
                    .addComponent(firstLayerSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel109))
                .addGap(13, 13, 13))
        );

        jPanel22.add(jPanel33);

        jPanel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel110.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel110.setText("Acceleration Control");

        jLabel111.setText("Perimeters:");

        jLabel112.setText("Infill:");

        jLabel113.setText("Bridge:");

        jLabel114.setText("First layer:");

        jLabel115.setText("Default:");

        jLabel116.setText("mm/s^2");

        jLabel117.setText("mm/s^2");

        jLabel118.setText("mm/s^2");

        jLabel119.setText("mm/s^2");

        jLabel120.setText("mm/s^2");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel110)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel111)
                            .addComponent(jLabel112)
                            .addComponent(jLabel113)
                            .addComponent(jLabel114)
                            .addComponent(jLabel115))
                        .addGap(92, 92, 92)
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel34Layout.createSequentialGroup()
                                .addComponent(defaultAccelerationText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel120))
                            .addGroup(jPanel34Layout.createSequentialGroup()
                                .addComponent(firstLayerAccelerationText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel119))
                            .addGroup(jPanel34Layout.createSequentialGroup()
                                .addComponent(bridgeSpeedAccerlerationText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel118))
                            .addGroup(jPanel34Layout.createSequentialGroup()
                                .addComponent(infillAccelerationText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel117))
                            .addGroup(jPanel34Layout.createSequentialGroup()
                                .addComponent(perimetersAccelerationText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel116)))))
                .addContainerGap(293, Short.MAX_VALUE))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel110)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel111)
                    .addComponent(perimetersAccelerationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel116))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel112)
                    .addComponent(infillAccelerationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel117))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel113)
                    .addComponent(bridgeSpeedAccerlerationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel118))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel114)
                    .addComponent(firstLayerAccelerationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel119))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel115)
                    .addComponent(defaultAccelerationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel120))
                .addGap(13, 13, 13))
        );

        jPanel22.add(jPanel34);

        jPanel35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel121.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel121.setText("Skirt");

        jLabel122.setText("Loops:");

        jLabel123.setText("Distance from object:");

        jLabel124.setText("Skirt height:");

        jLabel125.setText("Minimum extrusion length:");

        jLabel126.setText("mm");

        jLabel127.setText("mm");

        jLabel128.setText("layers");

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel121)
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel122)
                            .addComponent(jLabel123)
                            .addComponent(jLabel124)
                            .addComponent(jLabel125))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel35Layout.createSequentialGroup()
                                .addComponent(skirtMinExtrusionLengthText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel127))
                            .addGroup(jPanel35Layout.createSequentialGroup()
                                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(skirtLoopsText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(skirtDistanceFromObjectText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                    .addComponent(skirtHeightText))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel126)
                                    .addComponent(jLabel128))))))
                .addContainerGap(303, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel121)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel122)
                    .addComponent(skirtLoopsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel123)
                    .addComponent(skirtDistanceFromObjectText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel126))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel124)
                    .addComponent(jLabel128)
                    .addComponent(skirtHeightText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel125)
                    .addComponent(skirtMinExtrusionLengthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel127))
                .addGap(13, 13, 13))
        );

        jPanel22.add(jPanel35);

        jPanel36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel129.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel129.setText("Brim");

        jLabel130.setText("Brim width:");

        jLabel131.setText("mm");

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel129)
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addComponent(jLabel130)
                        .addGap(93, 93, 93)
                        .addComponent(brimWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel131)))
                .addContainerGap(317, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel129)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel130)
                    .addComponent(brimWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel131))
                .addGap(13, 13, 13))
        );

        jPanel22.add(jPanel36);

        jPanel37.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel132.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel132.setText("Support Material");

        jLabel133.setText("Generate support material:");

        jLabel134.setText("Overhang threshold:");

        jLabel135.setText("Enforce support for the first:");

        jLabel136.setText("layers");

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel132)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel133)
                                    .addComponent(jLabel134))
                                .addGap(19, 19, 19))
                            .addGroup(jPanel37Layout.createSequentialGroup()
                                .addComponent(jLabel135)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                                .addComponent(enforceSupportForFirstNLayersText)
                                .addGap(1, 1, 1))
                            .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(generateSupportMaterialCheckBox)
                                .addComponent(overhangThresholdText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addComponent(jLabel136)
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel132)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generateSupportMaterialCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel133))
                .addGap(1, 1, 1)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel134)
                    .addComponent(overhangThresholdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel135)
                    .addComponent(jLabel136)
                    .addComponent(enforceSupportForFirstNLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jPanel22.add(jPanel37);

        jPanel38.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel137.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel137.setText("Raft");

        jLabel138.setText("Raft layers:");

        jLabel139.setText("layers");

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel137)
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addComponent(jLabel138)
                        .addGap(88, 88, 88)
                        .addComponent(raftLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel139)))
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel137)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel138)
                    .addComponent(jLabel139)
                    .addComponent(raftLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        jPanel22.add(jPanel38);

        jPanel39.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel140.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel140.setText("Options for support materials and rafts");

        jLabel141.setText("Pattern:");

        jLabel142.setText("Pattern spacing:");

        jLabel143.setText("Pattern angle:");

        jLabel144.setText("Interface layers:");

        jLabel145.setText("Interface pattern spacing:");

        supportMaterialPatternCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "rectilinear", "rectilinear-grid", "honeycomb" }));

        jLabel146.setText("layers");

        jLabel147.setText("mm");

        jLabel148.setText("mm");

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addComponent(jLabel141)
                        .addGap(114, 114, 114)
                        .addComponent(supportMaterialPatternCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel140)
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel39Layout.createSequentialGroup()
                                .addComponent(jLabel142)
                                .addGap(75, 75, 75)
                                .addComponent(supportMaterialPatternSpacingText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel39Layout.createSequentialGroup()
                                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel144)
                                    .addComponent(jLabel143)
                                    .addComponent(jLabel145))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(supportMaterialPatternAngleText)
                                    .addGroup(jPanel39Layout.createSequentialGroup()
                                        .addComponent(supportMaterialInterfacePatternSpacingText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(supportMaterialInterfaceLayersText))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel146)
                            .addComponent(jLabel147)
                            .addComponent(jLabel148))))
                .addContainerGap(264, Short.MAX_VALUE))
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel140)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel141)
                    .addComponent(supportMaterialPatternCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel142)
                    .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(supportMaterialPatternSpacingText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel147)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel143)
                    .addComponent(supportMaterialPatternAngleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel144)
                    .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel146)
                        .addComponent(supportMaterialInterfaceLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel145)
                    .addComponent(supportMaterialInterfacePatternSpacingText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel148))
                .addGap(15, 15, 15))
        );

        jPanel22.add(jPanel39);

        jPanel41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel154.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel154.setText("Output File");

        jLabel155.setText("Verbose G-Code:");

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel154)
                    .addGroup(jPanel41Layout.createSequentialGroup()
                        .addComponent(jLabel155)
                        .addGap(108, 108, 108)
                        .addComponent(verboseGCodeCheckBox)))
                .addContainerGap(335, Short.MAX_VALUE))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel154)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel155)
                    .addComponent(verboseGCodeCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jPanel22.add(jPanel41);

        jPanel48.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));
        jPanel48.setPreferredSize(new java.awt.Dimension(250, 173));

        jLabel170.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel170.setText("Fan Settings");

        jLabel171.setText("Keep Fan Always On:");

        jLabel172.setText("Enable Auto-Cooling:");

        jLabel173.setText("Min:");

        jLabel174.setText("Fan Speed:");

        jLabel175.setText("Bridges fan speed:");

        jLabel176.setText("Max:");

        jLabel177.setText("Disable fan for the first:");

        jLabel178.setText("layers");

        jLabel179.setText("%");

        enableAutoCoolingCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableAutoCoolingCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel48Layout = new javax.swing.GroupLayout(jPanel48);
        jPanel48.setLayout(jPanel48Layout);
        jPanel48Layout.setHorizontalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel48Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel170)
                    .addGroup(jPanel48Layout.createSequentialGroup()
                        .addComponent(jLabel171)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(keepFanAlwaysOnCheckBox)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel172)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(enableAutoCoolingCheckBox))
                    .addGroup(jPanel48Layout.createSequentialGroup()
                        .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel177)
                            .addComponent(jLabel175))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bridgeFanSpeedPercentText, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addComponent(disableFanForFirstNLayersText))
                        .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel48Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel178, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel48Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel179))))
                    .addGroup(jPanel48Layout.createSequentialGroup()
                        .addComponent(jLabel174)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel173)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(minFanSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel176)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxFanSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(262, Short.MAX_VALUE))
        );
        jPanel48Layout.setVerticalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel48Layout.createSequentialGroup()
                .addComponent(jLabel170)
                .addGap(18, 18, 18)
                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(keepFanAlwaysOnCheckBox)
                    .addComponent(jLabel171, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel172, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enableAutoCoolingCheckBox))
                .addGap(8, 8, 8)
                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel173)
                        .addComponent(minFanSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel176)
                        .addComponent(maxFanSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel174))
                .addGap(21, 21, 21)
                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel175)
                    .addComponent(bridgeFanSpeedPercentText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel179))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel177)
                    .addComponent(disableFanForFirstNLayersText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel178))
                .addGap(58, 58, 58))
        );

        jPanel22.add(jPanel48);

        jPanel49.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel180.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel180.setText("Cooling Thresholds");

        jLabel181.setText("Enable fan if layer print time is below:");

        jLabel182.setText("seconds");

        jLabel183.setText("Slow down if layer print time is below:");

        jLabel184.setText("seconds");

        jLabel185.setText("Min print speed:");

        jLabel186.setText("mm/s");

        javax.swing.GroupLayout jPanel49Layout = new javax.swing.GroupLayout(jPanel49);
        jPanel49.setLayout(jPanel49Layout);
        jPanel49Layout.setHorizontalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel180)
                    .addGroup(jPanel49Layout.createSequentialGroup()
                        .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel183)
                            .addComponent(jLabel185))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(slowDownTimeTresholdlText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minPrintSpeedText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel184, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel186, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel49Layout.createSequentialGroup()
                        .addComponent(jLabel181)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableFanTimeThresholdText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel182)))
                .addContainerGap(256, Short.MAX_VALUE))
        );
        jPanel49Layout.setVerticalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel180)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel181)
                    .addComponent(jLabel182)
                    .addComponent(enableFanTimeThresholdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel183)
                    .addComponent(jLabel184)
                    .addComponent(slowDownTimeTresholdlText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel185)
                    .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel186)
                        .addComponent(minPrintSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );

        jPanel22.add(jPanel49);

        jPanel40.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 10));

        jLabel149.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel149.setText("Extrusion Width");

        jLabel150.setText("Default extrusion width:");

        jLabel151.setText("First layer:");

        jLabel152.setText("Perimeters:");

        jLabel153.setText("Infill:");

        jLabel156.setText("Solid infill:");

        jLabel157.setText("Top solid infill:");

        jLabel158.setText("Support material:");

        defaultExtrusionWidthText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultExtrusionWidthTextActionPerformed(evt);
            }
        });

        jLabel161.setText("mm/s");

        jLabel162.setText("%");

        jLabel163.setText("mm/s");

        jLabel164.setText("mm/s");

        jLabel165.setText("mm/s");

        jLabel166.setText("mm/s");

        jLabel167.setText("mm/s");

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel149)
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel150)
                            .addComponent(jLabel151)
                            .addComponent(jLabel152)
                            .addComponent(jLabel153)
                            .addComponent(jLabel156)
                            .addComponent(jLabel157)
                            .addComponent(jLabel158))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(supportMaterialExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel167))
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(topSolidInfillExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel166))
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(solidInfillExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel165))
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(infillExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel164))
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(perimetersExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel163))
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(firstLayerExtrusionWidthPercentText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel162))
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(defaultExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel161)))))
                .addContainerGap(290, Short.MAX_VALUE))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel149)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel150)
                    .addComponent(defaultExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel161))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel151)
                    .addComponent(firstLayerExtrusionWidthPercentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel162))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel152)
                    .addComponent(perimetersExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel163))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel153)
                    .addComponent(infillExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel164))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel156)
                    .addComponent(solidInfillExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel165))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel157)
                    .addComponent(topSolidInfillExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel166))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel158)
                    .addComponent(supportMaterialExtrusionWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel167))
                .addContainerGap())
        );

        jPanel22.add(jPanel40);

        jScrollPane7.setViewportView(jPanel22);

        configPanel.add(jScrollPane7, java.awt.BorderLayout.CENTER);

        add(configPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void loadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadBtnActionPerformed
        // TODO add your handling code here:
        String name;
        if(printConfigList.getSelectedValue() != null) {
            name = (String) printConfigList.getSelectedValue();
        }
        else {
            JOptionPane.showMessageDialog(null,"No Print Selected", "Please select a Print to load.", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        PrintConfiguration print = controller.loadPrintConfiguration(name);
        loadPrintConfiguration(print);
    }//GEN-LAST:event_loadBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        String name;
        if(printConfigList.getSelectedValue() != null) {
            name = (String) printConfigList.getSelectedValue();
        }
        else {
            JOptionPane.showMessageDialog(null,"No Print Selected", "Please select a Print to delete.", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        controller.deletePrintConfiguration(name);
        loadPrintConfigurationList();
        MainWindow.printJobPanel.updateSubsectionPanels();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        loadPrintConfiguration(new PrintConfiguration());
    }//GEN-LAST:event_newBtnActionPerformed

    private void nonOverhangsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonOverhangsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nonOverhangsCheckBoxActionPerformed

    private void perimetersSpeedTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perimetersSpeedTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_perimetersSpeedTextActionPerformed

    private void solidInfillEveryNLayersTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solidInfillEveryNLayersTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_solidInfillEveryNLayersTextActionPerformed

    private void firstLayerHeightPCTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstLayerHeightPCTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstLayerHeightPCTextActionPerformed

    private void layerHeightPCTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_layerHeightPCTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_layerHeightPCTextActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            PrintConfiguration print = getPrintConfiguration();
            controller.savePrintConfiguration(print);
            loadPrintConfigurationList();
            MainWindow.printJobPanel.updateSubsectionPanels();
        } catch (BadFieldException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage(), ex.getMessage(), JOptionPane.INFORMATION_MESSAGE);
            //Logger.getLogger(ExtruderPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void enableAutoCoolingCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableAutoCoolingCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enableAutoCoolingCheckBoxActionPerformed

    private void defaultExtrusionWidthTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultExtrusionWidthTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_defaultExtrusionWidthTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox avoidCrossingPerimetersCheckBox;
    private javax.swing.JTextField bridgeFanSpeedPercentText;
    private javax.swing.JTextField bridgeSpeedAccerlerationText;
    private javax.swing.JTextField bridgesSpeedText;
    private javax.swing.JTextField brimWidthText;
    private javax.swing.JTextField combineInfillEveryNLayersText;
    private javax.swing.JPanel commandPanel;
    private javax.swing.JCheckBox concavePointsCheckBox;
    private javax.swing.JPanel configPanel;
    private javax.swing.JTextField defaultAccelerationText;
    private javax.swing.JTextField defaultExtrusionWidthText;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JCheckBox detectBridgesCheckBox;
    private javax.swing.JCheckBox detectThinWallsCheckBox;
    private javax.swing.JTextField disableFanForFirstNLayersText;
    private javax.swing.JCheckBox enableAutoCoolingCheckBox;
    private javax.swing.JTextField enableFanTimeThresholdText;
    private javax.swing.JTextField enforceSupportForFirstNLayersText;
    private javax.swing.JCheckBox externalPerimetersFirstCheckBox;
    private javax.swing.JTextField externalPerimetersSpeedText;
    private javax.swing.JTextField fillAngleText;
    private javax.swing.JTextField fillDensityPCText;
    private javax.swing.JComboBox fillPatternPCCombo;
    private javax.swing.JTextField firstLayerAccelerationText;
    private javax.swing.JTextField firstLayerExtrusionWidthPercentText;
    private javax.swing.JTextField firstLayerHeightPCText;
    private javax.swing.JTextField firstLayerSpeedText;
    private javax.swing.JTextField gapFillSpeedText;
    private javax.swing.JCheckBox generateExtraPerimetersCheckBox;
    private javax.swing.JCheckBox generateSupportMaterialCheckBox;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JTextField infillAccelerationText;
    private javax.swing.JCheckBox infillBeforePerimetersCheckBox;
    private javax.swing.JTextField infillExtrusionWidthText;
    private javax.swing.JCheckBox infillNeededPCCheckBox;
    private javax.swing.JTextField infillSpeedText;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel153;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel156;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel158;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel163;
    private javax.swing.JLabel jLabel164;
    private javax.swing.JLabel jLabel165;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel167;
    private javax.swing.JLabel jLabel170;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel173;
    private javax.swing.JLabel jLabel174;
    private javax.swing.JLabel jLabel175;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel177;
    private javax.swing.JLabel jLabel178;
    private javax.swing.JLabel jLabel179;
    private javax.swing.JLabel jLabel180;
    private javax.swing.JLabel jLabel181;
    private javax.swing.JLabel jLabel182;
    private javax.swing.JLabel jLabel183;
    private javax.swing.JLabel jLabel184;
    private javax.swing.JLabel jLabel185;
    private javax.swing.JLabel jLabel186;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JCheckBox keepFanAlwaysOnCheckBox;
    private javax.swing.JTextField layerHeightPCText;
    private javax.swing.JButton loadBtn;
    private javax.swing.JTextField maxFanSpeedText;
    private javax.swing.JTextField minFanSpeedText;
    private javax.swing.JTextField minPrintSpeedText;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JPanel namePanel;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JButton newBtn;
    private javax.swing.JCheckBox nonOverhangsCheckBox;
    private javax.swing.JCheckBox onlyRetractInfillWhenCrossingPerimetersCheckBox;
    private javax.swing.JTextField overhangThresholdText;
    private javax.swing.JTextField perimetersAccelerationText;
    private javax.swing.JTextField perimetersExtrusionWidthText;
    private javax.swing.JTextField perimetersSpeedText;
    private javax.swing.JTextField perimetersText;
    private javax.swing.JList printConfigList;
    private javax.swing.JTextField raftLayersText;
    private javax.swing.JCheckBox randomizeStartingPointsCheckBox;
    private javax.swing.JButton saveBtn;
    private javax.swing.JPanel selectionPanel;
    private javax.swing.JScrollPane selectionScrollPane;
    private javax.swing.JTextField skirtDistanceFromObjectText;
    private javax.swing.JTextField skirtHeightText;
    private javax.swing.JTextField skirtLoopsText;
    private javax.swing.JTextField skirtMinExtrusionLengthText;
    private javax.swing.JTextField slowDownTimeTresholdlText;
    private javax.swing.JTextField smallPerimetersSpeedText;
    private javax.swing.JTextField solidBottomLayersText;
    private javax.swing.JTextField solidInfillEveryNLayersText;
    private javax.swing.JTextField solidInfillExtrusionWidthText;
    private javax.swing.JTextField solidInfillSpeedText;
    private javax.swing.JTextField solidThresholdPCText;
    private javax.swing.JTextField solidTopLayersText;
    private javax.swing.JCheckBox spiralVasePCCheckBox;
    private javax.swing.JTextField supportMaterialExtrusionWidthText;
    private javax.swing.JTextField supportMaterialInterfaceLayersText;
    private javax.swing.JTextField supportMaterialInterfacePatternSpacingText;
    private javax.swing.JTextField supportMaterialPatternAngleText;
    private javax.swing.JComboBox supportMaterialPatternCombo;
    private javax.swing.JTextField supportMaterialPatternSpacingText;
    private javax.swing.JTextField supportMaterialSpeedText;
    private javax.swing.JComboBox topBottomPCCombo;
    private javax.swing.JTextField topSolidInfillExtrusionWidthText;
    private javax.swing.JTextField topSolidInfillSpeedText;
    private javax.swing.JTextField travelSpeedText;
    private javax.swing.JCheckBox verboseGCodeCheckBox;
    // End of variables declaration//GEN-END:variables

    public PrintConfiguration getPrintConfiguration() throws BadFieldException {
        PrintConfiguration print = new PrintConfiguration();

        String name = nameTxt.getText();
        if(InputValidationUtility.isStringEmpty(name)) {
            throw new BadFieldException("The name of the extruder must not be empty.");
        }
        print.setName(name);

        LayerAndPerimeterConfiguration lp = new LayerAndPerimeterConfiguration();

        double layerHeight = InputValidationUtility.parseDouble("Layer Height", 
                layerHeightPCText.getText());
        lp.setLayerHeight(layerHeight);

        double firstLayerHeight = InputValidationUtility.parseDouble("First Layer Height",
                firstLayerHeightPCText.getText());
        lp.setFirstLayerHeight(firstLayerHeight);

        int perimeters = InputValidationUtility.parseInt("Perimeters",
                perimetersText.getText());
        lp.setPerimeters(perimeters);

        lp.setSpiralVase(spiralVasePCCheckBox.isSelected());

        int solidTopLayers = InputValidationUtility.parseInt("Solid Top Layers",
                solidTopLayersText.getText());
        lp.setSolidTopLayers(solidTopLayers);

        int solidBottomLayers = InputValidationUtility.parseInt("Solid Bottom Layers",
                solidBottomLayersText.getText());
        lp.setSolidBottomLayers(solidBottomLayers);

        lp.setGenerateExtraPerimetersWhenNeeded(generateExtraPerimetersCheckBox.isSelected());
        lp.setAvoidCrossingPerimeters(avoidCrossingPerimetersCheckBox.isSelected());
        lp.setStartPerimetersAtConcavePoints(concavePointsCheckBox.isSelected());
        lp.setStartPerimetersAtNonOverhangPoints(nonOverhangsCheckBox.isSelected());
        lp.setDetectThinWalls(detectThinWallsCheckBox.isSelected());
        lp.setDetectBridgingPerimeters(detectBridgesCheckBox.isSelected());

        lp.setRandomizedStartingPoints(randomizeStartingPointsCheckBox.isSelected());
        lp.setExternalPerimetersFirst(externalPerimetersFirstCheckBox.isSelected());
        
        print.setLayerPerimiterConfiguration(lp);
        
        // INFILL SETTINGS
        InfillConfiguration infill = new InfillConfiguration();

        double infillDensity = InputValidationUtility.parseDouble("Fill Density",
                fillDensityPCText.getText());
        infill.setInfillDensity(infillDensity);

        infill.setInfillPattern((String) fillPatternPCCombo.getSelectedItem());
        infill.setTopBottomInfillPattern((String) topBottomPCCombo.getSelectedItem());

        int combineInfillEveryNLayers = InputValidationUtility.parseInt("Combine Infill Every N Layers",
                combineInfillEveryNLayersText.getText());
        infill.setCombineInfillEveryNLayers(combineInfillEveryNLayers);

        int solidInfillEveryNLayers = InputValidationUtility.parseInt("Solid Infill Every N Layers",
                solidInfillEveryNLayersText.getText());
        infill.setSolidInfillEveryNLayers(solidInfillEveryNLayers);

        int fillAngle = InputValidationUtility.parseInt("Fill Angle",
                fillAngleText.getText());
        infill.setInfillAngle(fillAngle);

        int solidInfillThresholdArea = InputValidationUtility.parseInt("Solid Infill Threshold Area",
                solidThresholdPCText.getText());
        infill.setSolidInfillThresholdArea(solidInfillThresholdArea);

        infill.setOnlyRetractInfillWhenCrossingPerimeters(
                onlyRetractInfillWhenCrossingPerimetersCheckBox.isSelected());
        infill.setInfillBeforePerimeters(infillBeforePerimetersCheckBox.isSelected());

        print.setInfillConfiguration(infill);

        // SPEED SETTINGS
        SpeedConfiguration speed = new SpeedConfiguration();

        double perimetersSpeed = InputValidationUtility.parseDouble("Perimeters Speed",
                perimetersSpeedText.getText());
        speed.setPerimetersSpeed(perimetersSpeed);

        double smallPerimetersSpeed = InputValidationUtility.parseDouble("Small Perimeters Speed",
                smallPerimetersSpeedText.getText());
        speed.setSmallPerimetersSpeed(smallPerimetersSpeed);

        double externalPerimetersSpeed = InputValidationUtility.parseDouble("External Perimeters Speed", 
                externalPerimetersSpeedText.getText());
        speed.setExternalPerimetersSpeed(externalPerimetersSpeed);

        double infillSpeed = InputValidationUtility.parseDouble("Infill Speed",
                infillSpeedText.getText());
        speed.setInfillSpeed(infillSpeed);

        double solidInfillSpeed = InputValidationUtility.parseDouble("Solid Infill Speed",
                solidInfillSpeedText.getText());
        speed.setSolidInfillSpeed(solidInfillSpeed);

        double topSolidInfillSpeed = InputValidationUtility.parseDouble("Top Solid Infill Speed",
                topSolidInfillSpeedText.getText());
        speed.setTopSolidInfillSpeed(topSolidInfillSpeed);

        double supportMaterialSpeed = InputValidationUtility.parseDouble("Support Material Speed",
                supportMaterialSpeedText.getText());
        speed.setSupportMaterialSpeed(supportMaterialSpeed);

        double bridgesSpeed = InputValidationUtility.parseDouble("Bridges Speed",
                bridgesSpeedText.getText());
        speed.setBridgesSpeed(bridgesSpeed);

        double gapFillSpeed = InputValidationUtility.parseDouble("Gap Fill Speed",
                gapFillSpeedText.getText());
        speed.setGapFillSpeed(gapFillSpeed);

        double travelSpeed = InputValidationUtility.parseDouble("Travel Speed",
                travelSpeedText.getText());
        speed.setNonPrintMovesSpeed(travelSpeed);

        int firstLayerSpeed = InputValidationUtility.parseInt("First Layer Speed",
                firstLayerSpeedText.getText());
        speed.setFirstLayerSpeed(firstLayerSpeed);

        double perimetersAcceleration = InputValidationUtility.parseDouble("Perimeter Acceleration",
                perimetersAccelerationText.getText());
        speed.setPerimetersAcceleration(perimetersAcceleration);

        double infillAcceleration = InputValidationUtility.parseDouble("Infill Acceleration",
                infillAccelerationText.getText());
        speed.setInfillAcceleration(infillAcceleration);

        double bridgeAccerleration = InputValidationUtility.parseDouble("Bridge Acceleration",
                bridgeSpeedAccerlerationText.getText());
        speed.setBridgeAcceleration(bridgeAccerleration);

        double firstLayerAcceleration = InputValidationUtility.parseDouble("First Layer Acceleration",
                firstLayerAccelerationText.getText());
        speed.setFirstLayerAcceleration(firstLayerAcceleration);

        double defaultAcceleration = InputValidationUtility.parseDouble("Default Acceleration",
                defaultAccelerationText.getText());
        speed.setDefaultAcceleration(defaultAcceleration);
        
        print.setSpeedConfiguration(speed);

        // SKIRT AND BRIM SETTINGS
        SkirtAndBrimConfiguration skirtBrim = new SkirtAndBrimConfiguration();

        int skirtLoops = InputValidationUtility.parseInt("Skirt Loops",
                skirtLoopsText.getText());
        skirtBrim.setSkirtLoops(skirtLoops);

        double skirtDistanceFromObject = InputValidationUtility.parseDouble("Skirt Distance From Object",
                skirtDistanceFromObjectText.getText());
        skirtBrim.setSkirtDistanceFromObject(firstLayerSpeed);
        
        int skirtHeight = InputValidationUtility.parseInt("Skirt Height",
                skirtHeightText.getText());
        skirtBrim.setSkirtHeight(skirtHeight);

        double skirtMinExtrusionLenght = InputValidationUtility.parseDouble("Skirt Minimum Extrusion Length",
                skirtMinExtrusionLengthText.getText());
        skirtBrim.setSkirtMinimumExtrusionLength(skirtMinExtrusionLenght);
        
        double brimWidth = InputValidationUtility.parseDouble("Brim Width",
                brimWidthText.getText());
        skirtBrim.setBrimWidth(brimWidth);

        print.setSkirtAndBrimConfiguration(skirtBrim);

        // SUPPORT MATERIAL SETTINGS
        SupportMaterialConfiguration support = new SupportMaterialConfiguration();

        support.setGenerateSupportMaterial(generateSupportMaterialCheckBox.isSelected());

        int overhangThreshold = InputValidationUtility.parseInt("Support Material Overhang Threshold",
                overhangThresholdText.getText());
        support.setOverhangThreshold(overhangThreshold);

        int enforceSupportForFirstNLayers = InputValidationUtility.parseInt("Enforce Support For First N Layers", 
                enforceSupportForFirstNLayersText.getText());
        support.setEnforceSupportForFirstNLayers(enforceSupportForFirstNLayers);

        int raftLayers = InputValidationUtility.parseInt("Raft Layers",
                raftLayersText.getText());
        support.setRaftLayers(raftLayers);

        support.setSupportMaterialPattern((String) supportMaterialPatternCombo.getSelectedItem());

        double supportMaterialPatternSpacing = InputValidationUtility.parseDouble("Support Material Pattern Spacing",
                supportMaterialPatternSpacingText.getText());
        support.setSupportPatternSpacing(supportMaterialPatternSpacing);

        int supportMaterialPatternAngle = InputValidationUtility.parseInt("Support Material Pattern Angle",
                supportMaterialPatternAngleText.getText());
        support.setSupportPatternAngle(supportMaterialPatternAngle);

        int interfaceLayers = InputValidationUtility.parseInt("Interface Layers",
                supportMaterialInterfaceLayersText.getText());
        support.setInterfaceLayers(interfaceLayers);

        double interfacePatternSpacing = InputValidationUtility.parseDouble("Interface Pattern Spacing",
                supportMaterialInterfacePatternSpacingText.getText());
        support.setInterfacePatternSpacing(interfacePatternSpacing);
        
        print.setSupportMaterialConfiguration(support);

        CoolingConfiguration cooling = new CoolingConfiguration();
        
        cooling.setFanAlwaysOn(keepFanAlwaysOnCheckBox.isSelected());
        cooling.setEnableAutoCooling(enableAutoCoolingCheckBox.isSelected());
        
        int minFanSpeed = InputValidationUtility.parseInt("Min Fan Speed", minFanSpeedText.getText());
        cooling.setMinFanSpeed(minFanSpeed);

        int maxFanSpeed = InputValidationUtility.parseInt("Max Fan Speed", maxFanSpeedText.getText());
        cooling.setMaxFanSpeed(maxFanSpeed);

        int bridgeFanSpeed = InputValidationUtility.parseInt("Bridge Fan Speed Percentage",
                bridgeFanSpeedPercentText.getText());
        cooling.setBridgeFanSpeedPercent(bridgeFanSpeed);

        int disableFanForFirstNLayers = InputValidationUtility.parseInt("Disable Fan For First N Layers",
                disableFanForFirstNLayersText.getText());
        cooling.setDisableFanForFirstNLayers(disableFanForFirstNLayers);
        
        int enableFanTimeThreshold = InputValidationUtility.parseInt("'Enable fan if layer print time is below'",
                enableFanTimeThresholdText.getText());
        cooling.setEnableFanTimeThreshold(enableFanTimeThreshold);

        int slowDownTimeThreshold = InputValidationUtility.parseInt("'Slow down if layer print time is below'",
                slowDownTimeTresholdlText.getText());
        cooling.setSlowDownTimeTreshold(slowDownTimeThreshold);

        int minPrintSpeed = InputValidationUtility.parseInt("Min Print Speed",
                minPrintSpeedText.getText());
        cooling.setMinPrintSpeed(minPrintSpeed);

        print.setCoolingConfiguration(cooling);


        ExtrusionWidthConfiguration ew = new ExtrusionWidthConfiguration();

        double defaultExtrusionWidth = InputValidationUtility.parseDouble("Default Extrusion Width",
                defaultExtrusionWidthText.getText());
        ew.setDefaultExtrusionWidth(defaultExtrusionWidth);

        int firstLayerExtrusionWidthPercent = InputValidationUtility.parseInt("First Layer Extrusion Width",
                firstLayerExtrusionWidthPercentText.getText());
        ew.setFirstLayerExtrusionWidth(firstLayerExtrusionWidthPercent);

        double perimetersExtrusionWidth = InputValidationUtility.parseDouble("First Layer Extrusion Width",
                perimetersExtrusionWidthText.getText());
        ew.setPerimetersExtrusionWidth(perimetersExtrusionWidth);

        double infillExtrusionWidth = InputValidationUtility.parseDouble("Infill Extrusion Width",
                infillExtrusionWidthText.getText());
        ew.setInfillExtrusionWidth(infillExtrusionWidth);

        double solidInfillExtrusionWidth = InputValidationUtility.parseDouble("Solid Infill Extrusion Width",
                solidInfillExtrusionWidthText.getText());
        ew.setSolidInfillExtrusionWidth(solidInfillExtrusionWidth);

        double topSolidExtrusionWidth = InputValidationUtility.parseDouble("Top Solid Infill Extrusion Width",
                topSolidInfillExtrusionWidthText.getText());
        ew.setTopSolidInfillExtrusionWidth(solidInfillExtrusionWidth);

        double supportMaterialExtrusionWidth = InputValidationUtility.parseDouble("Support Material Extrusion Width",
                supportMaterialExtrusionWidthText.getText());
        ew.setSupportMaterialExtrusionWidth(supportMaterialExtrusionWidth);

        print.setExtrusionWidthConfiguration(ew);

        return print;
    }

    private void loadPrintConfiguration(PrintConfiguration print) {
        this.nameTxt.setText(print.getName());
        LayerAndPerimeterConfiguration lp = print.getLayerPerimiterConfiguration();
        layerHeightPCText.setText(String.valueOf(lp.getLayerHeight()));
        firstLayerHeightPCText.setText(String.valueOf(lp.getFirstLayerHeight()));
        perimetersText.setText(String.valueOf(lp.getPerimeters()));
        spiralVasePCCheckBox.setSelected(lp.isSpiralVase() ? true : false);
        solidTopLayersText.setText(String.valueOf(lp.getSolidTopLayers()));
        solidBottomLayersText.setText(String.valueOf(lp.getSolidBottomLayers()));
        generateExtraPerimetersCheckBox.setSelected(lp.isGenerateExtraPerimetersWhenNeeded() ? true : false);
        avoidCrossingPerimetersCheckBox.setSelected(lp.isAvoidCrossingPerimeters() ? true : false);
        concavePointsCheckBox.setSelected(lp.isStartPerimetersAtConcavePoints() ? true : false);
        detectThinWallsCheckBox.setSelected(lp.isDetectThinWalls() ? true : false);
        detectBridgesCheckBox.setSelected(lp.isDetectBridgingPerimeters() ? true : false);
        randomizeStartingPointsCheckBox.setSelected(lp.isRandomizedStartingPoints() ? true : false);
        externalPerimetersFirstCheckBox.setSelected(lp.isExternalPerimetersFirst() ? true : false);

        InfillConfiguration infill = print.getInfillConfiguration();

        fillDensityPCText.setText(String.valueOf(infill.getInfillDensity()));
        for(int i = 0; i < fillPatternPCCombo.getItemCount(); i++) {
            String fillPattern = infill.getInfillPattern();
            if(fillPatternPCCombo.getItemAt(i).equals(fillPattern)) {
                fillPatternPCCombo.setSelectedIndex(i);
                break;
            }
        }
        for(int i = 0; i < topBottomPCCombo.getItemCount(); i++) {
            String pattern = infill.getTopBottomInfillPattern();
            if(topBottomPCCombo.getItemAt(i).equals(pattern)) {
                topBottomPCCombo.setSelectedIndex(i);
                break;
            }
        }
        combineInfillEveryNLayersText.setText(String.valueOf(infill.getCombineInfillEveryNLayers()));
        infillNeededPCCheckBox.setSelected(infill.isOnlyInfillWhereNeeded() ? true : false);
        solidInfillEveryNLayersText.setText(String.valueOf(infill.getSolidInfillEveryNLayers()));
        fillAngleText.setText(String.valueOf(infill.getInfillAngle()));
        solidThresholdPCText.setText(String.valueOf(infill.getSolidInfillThresholdArea()));
        onlyRetractInfillWhenCrossingPerimetersCheckBox.setSelected(infill.isOnlyRetractInfillWhenCrossingPerimeters() ? true : false);
        infillBeforePerimetersCheckBox.setSelected(infill.isInfillBeforePerimeters() ? true : false);

        SpeedConfiguration speed = print.getSpeedConfiguration();

        perimetersSpeedText.setText(String.valueOf(speed.getPerimetersSpeed()));
        smallPerimetersSpeedText.setText(String.valueOf(speed.getSmallPerimetersSpeed()));
        externalPerimetersSpeedText.setText(String.valueOf(speed.getExternalPerimetersSpeed()));
        infillSpeedText.setText(String.valueOf(speed.getInfillSpeed()));
        solidInfillSpeedText.setText(String.valueOf(speed.getSolidInfillSpeed()));
        topSolidInfillSpeedText.setText(String.valueOf(speed.getTopSolidInfillSpeed()));
        supportMaterialSpeedText.setText(String.valueOf(speed.getSupportMaterialSpeed()));
        bridgesSpeedText.setText(String.valueOf(speed.getBridgesSpeed()));
        gapFillSpeedText.setText(String.valueOf(speed.getGapFillSpeed()));
        travelSpeedText.setText(String.valueOf(speed.getNonPrintMovesSpeed()));
        firstLayerSpeedText.setText(String.valueOf(speed.getFirstLayerSpeed()));
        perimetersAccelerationText.setText(String.valueOf(speed.getPerimetersAcceleration()));
        infillAccelerationText.setText(String.valueOf(speed.getInfillAcceleration()));
        bridgeSpeedAccerlerationText.setText(String.valueOf(speed.getBridgeAcceleration()));
        firstLayerAccelerationText.setText(String.valueOf(speed.getFirstLayerAcceleration()));
        defaultAccelerationText.setText(String.valueOf(speed.getDefaultAcceleration()));

        SkirtAndBrimConfiguration sb = print.getSkirtAndBrimConfiguration();

        skirtLoopsText.setText(String.valueOf(sb.getSkirtLoops()));
        skirtDistanceFromObjectText.setText(String.valueOf(sb.getSkirtDistanceFromObject()));
        skirtHeightText.setText(String.valueOf(sb.getSkirtHeight()));
        skirtMinExtrusionLengthText.setText(String.valueOf(sb.getSkirtMinimumExtrusionLength()));
        brimWidthText.setText(String.valueOf(sb.getBrimWidth()));

        SupportMaterialConfiguration support = print.getSupportMaterialConfiguration();
        generateSupportMaterialCheckBox.setSelected(support.isGenerateSupportMaterial() ? true : false);
        overhangThresholdText.setText(String.valueOf(support.getOverhangThreshold()));
        enforceSupportForFirstNLayersText.setText(String.valueOf(support.getEnforceSupportForFirstNLayers()));
        raftLayersText.setText(String.valueOf(support.getRaftLayers()));
        for(int i = 0; i < supportMaterialPatternCombo.getItemCount(); i++) {
            String pattern = support.getSupportMaterialPattern();
            if(supportMaterialPatternCombo.getItemAt(i).equals(pattern)) {
                supportMaterialPatternCombo.setSelectedIndex(i);
                break;
            }
        }
        supportMaterialPatternSpacingText.setText(String.valueOf(support.getSupportPatternSpacing()));
        supportMaterialPatternAngleText.setText(String.valueOf(support.getSupportPatternAngle()));
        supportMaterialInterfaceLayersText.setText(String.valueOf(support.getInterfaceLayers()));
        supportMaterialInterfacePatternSpacingText.setText(String.valueOf(support.getInterfacePatternSpacing()));

        CoolingConfiguration cooling = print.getCoolingConfiguration();

        keepFanAlwaysOnCheckBox.setSelected(cooling.isFanAlwaysOn());
        enableAutoCoolingCheckBox.setSelected(cooling.isEnableAutoCooling());
        minFanSpeedText.setText(String.valueOf(cooling.getMinFanSpeed()));
        maxFanSpeedText.setText(String.valueOf(cooling.getMaxFanSpeed()));
        bridgeFanSpeedPercentText.setText(String.valueOf(cooling.getBridgeFanSpeedPercent()));
        disableFanForFirstNLayersText.setText(String.valueOf(cooling.getDisableFanForFirstNLayers()));
        enableFanTimeThresholdText.setText(String.valueOf(cooling.getEnableFanTimeThreshold()));
        slowDownTimeTresholdlText.setText(String.valueOf(cooling.getSlowDownTimeTreshold()));
        minPrintSpeedText.setText(String.valueOf(cooling.getMinPrintSpeed()));

        ExtrusionWidthConfiguration ew = print.getExtrusionWidthConfiguration();

        defaultExtrusionWidthText.setText(String.valueOf(ew.getDefaultExtrusionWidth()));
        firstLayerExtrusionWidthPercentText.setText(String.valueOf(ew.getFirstLayerExtrusionWidth()));
        perimetersExtrusionWidthText.setText(String.valueOf(ew.getPerimetersExtrusionWidth()));
        infillExtrusionWidthText.setText(String.valueOf(ew.getInfillExtrusionWidth()));
        solidInfillExtrusionWidthText.setText(String.valueOf(ew.getSolidInfillExtrusionWidth()));
        topSolidInfillExtrusionWidthText.setText(String.valueOf(ew.getTopSolidInfillExtrusionWidth()));
        supportMaterialExtrusionWidthText.setText(String.valueOf(ew.getSupportMaterialExtrusionWidth()));

    }

    private void loadPrintConfigurationList() {
        DefaultListModel model = new DefaultListModel();        
        List<String> printConfigNames = controller.loadPrintConfigurationList();
        for(String name : printConfigNames) {
            model.addElement(name);
        }
        this.printConfigList.setModel(model);
    }

}
